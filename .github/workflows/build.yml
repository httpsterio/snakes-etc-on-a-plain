name: Build Game for Windows

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest  # Using GitHub's hosted Windows runner

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Check system architecture
      run: |
        echo "System architecture: $(wmic os get osarchitecture)"

    - name: Download and Install Python 2.7.18
      run: |
        echo "Downloading Python 2.7.18..."
        $url = "https://www.python.org/ftp/python/2.7.18/python-2.7.18.msi"
        $output = "${{ github.workspace }}\python-2.7.18.msi"
        Invoke-WebRequest -Uri $url -OutFile $output
        msiexec /i $output /quiet /norestart ADDLOCAL=ALL

    - name: Verify Python 2.7 installation
      run: |
        echo "Verifying Python 2.7 installation..."
        $env:PATH = "C:\Python27\;$env:PATH"
        python --version
        where python

    - name: Install pip using get-pip.py
      run: |
        echo "Downloading get-pip.py..."
        Invoke-WebRequest -Uri "https://bootstrap.pypa.io/pip/2.7/get-pip.py" -OutFile "get-pip.py"
        python get-pip.py

    - name: Install specific pip version (19.2.3)
      run: |
        echo "Installing pip version 19.2.3..."
        python -m pip install --upgrade pip==19.2.3

    - name: Install py2exe from Source
      run: |
        $env:PATH = "C:\Python27\;$env:PATH"
        cd "${{ github.workspace }}\src\bin\python\py2exe-0.6.9"
        python setup.py build --compiler=mingw32 install


    - name: Verify py2exe installation
      run: |
        $env:PATH = "C:\Python27\;$env:PATH"
        python -c "import py2exe; print(py2exe.__version__)"

    - name: List installed Python packages
      run: |
        echo "Listing installed Python packages..."
        $env:PATH = "C:\Python27\;$env:PATH"
        python -m pip freeze

    - name: Verify py2exe installation
      run: |
        echo "Verifying py2exe installation..."
        $env:PATH = "C:\Python27\;$env:PATH"
        python -c "import py2exe; print('py2exe installed successfully')"

    - name: Install pyglet manually (using a specific wheel, if needed)
      run: |
        echo "Installing pyglet..."
        $env:PATH = "C:\Python27\;$env:PATH"
        python -m pip install "${{ github.workspace }}\src\bin\python\pyglet-1.2.0-py2-none-any.whl"

    - name: Build with py2exe
      run: |
        echo "Building with py2exe..."
        $env:PATH = "C:\Python27\;$env:PATH"
        cd src
        python setup.py py2exe

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: snakes-etc-on-a-plain-win32
        path: release/win32  # Adjust to your actual build output path
